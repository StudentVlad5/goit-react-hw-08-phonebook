{"version":3,"file":"static/js/293.17b85047.chunk.js","mappings":"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","sources":["redux/selectors.js","components/DynamicSort/DynamicSort.jsx","components/ContactForms/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","components/App.jsx","pages/Contacts.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["export const getContacts = state => state.contacts.items;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\nexport const getStatusFilter = state => state.filters;","import propTypes from 'prop-types';\n\nfunction DynamicSort(property) {\n    return function (a,b) {\n          const result = (a[property].toUpperCase() < b[property].toUpperCase()) ? -1 : (a[property] > b[property]) ? 1 : 0;\n          return result;\n    }\n  }\n  export default DynamicSort\n\n    DynamicSort.propTypes = {\n      property: propTypes.string\n  }","import {useState} from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addContact } from \"../../redux/operations\";\nimport { getContacts} from '../../redux/selectors';\nimport DynamicSort from \"components/DynamicSort/DynamicSort\";\n\nfunction  ContactForm  () {\n\n    const [initial_state, setInitial_state] = useState({\n        name: \"\",\n        phone: \"\",\n    });\nconst contacts = [...useSelector(getContacts)].sort(DynamicSort('name'));\nconst dispatch = useDispatch();\n\nfunction handleChangeForm  (event) {\n    const {name, value} = event.target;\n    return setInitial_state(initial_state=>({...initial_state, [name]:value}));\n}\n\nfunction handleFormSubmit  (event)  {\n    event.preventDefault()\n    const isValidateForm =  validateForm();\n    if(isValidateForm){\n    let newContact = {name: initial_state.name, number: initial_state.phone};\n    resetForm ();\n    dispatch(addContact(newContact));\n}}\n\nfunction validateForm () {\n    if (!initial_state.name || !initial_state.phone){\n        alert('Some field is empty');\n        return false}\n    else if ([...contacts].filter(key=>key.name === initial_state.name).length > 0){\n         alert(\"contact already exist\");\n    return false}\n    else return true\n    }\n\nfunction resetForm () {\n    setInitial_state(initial_state=>({\n        name: '',\n        phone: '',\n    }))\n}\n        return(\n        <form onSubmit={handleFormSubmit}>\n            <label>Name\n                <input  \n                type=\"text\"   \n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                value={initial_state.name}\n                onChange = {handleChangeForm}\n                required/>\n            </label>\n            <label>Phone\n                <input \n                type=\"tel\"\n                name=\"phone\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                value={initial_state.phone}\n                onChange = {handleChangeForm}\n                required/>\n            </label>\n            <button type='submit'>Add contact</button>\n        </form>)\n        \n    }\n\nexport default ContactForm\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { setFilter} from \"../../redux/filterSlice\";\n\nconst Filter = () => {\n\n    const filter = useSelector(state => state.filters);\n    const dispatch = useDispatch();\n    function handleFilterChange (filter) {dispatch(setFilter(filter))};\n\n    return (\n    <input \n    type=\"text\" \n    name=\"filter\" \n    value = {filter} \n    onChange={({target}) => handleFilterChange(target.value)} \n    placeholder=\"Enter info for seach\"/>\n    )\n}\n\nexport default Filter","import { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { fetchContacts, deleteContact } from \"redux/operations\";\nimport {getStatusFilter, getContacts} from '../../redux/selectors';\nimport DynamicSort from '../DynamicSort/DynamicSort';\nimport Filter from '../Filter/Filter';\nimport propTypes from 'prop-types';\n\nconst ContactListItem = ({id, name, number, onRemove}) => {\n    return (\n        <li>\n            {name}: {number} <button onClick={()=>onRemove(id)}>Delete</button>\n        </li>\n    )\n}\n\nconst ContactList = () =>{\n    const contacts = [...useSelector(getContacts)].sort(DynamicSort('name'));\n    const filter = useSelector(getStatusFilter);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n    dispatch(fetchContacts());\n    }, [dispatch]);\n\nfunction handleRemoveContact  (event) {\nreturn (dispatch(deleteContact(event)))\n}\n\nfunction getVisibleContacts () {\n  return (contacts.filter((contact) => contact.name.toLowerCase().includes(filter.toLowerCase())));\n} \n\nconst visibleContacts = getVisibleContacts();\n    if(contacts.length === 0){return null}\n    return (\n        <>\n        <h4>Contacts List: {visibleContacts.length}</h4>\n        <h5>Find contact</h5><Filter/>\n        <ul>\n            {visibleContacts.map(contact => <ContactListItem {...contact} onRemove={handleRemoveContact} key={contact.id}/>)}\n        </ul>\n        </>\n    )\n}\n\nexport default ContactList\n\nContactListItem.propTypes = {\n    id : propTypes.string,\n    name : propTypes.string, \n    phone : propTypes.string, \n    onRemove: propTypes.func\n}","import { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { fetchContacts } from \"redux/operations\";\nimport { refreshUser } from \"../redux/auth/operations\"\nimport ContactForm from './ContactForms/ContactForm';\nimport ContactList from './ContactList/ContactList';\n\n\nexport default function App () {\nconst dispatch = useDispatch();\n\n    useEffect(() => {\n      dispatch(fetchContacts());\n    }, [dispatch]);\n\n    useEffect(() => {\n      dispatch(refreshUser());\n    }, [dispatch]);\n\n    return (\n      <div\n        style={{\n          display: 'flex',\n          minWidth: 555,\n          justifyContent: 'center',\n          alignItems: 'center',\n          fontSize: 20,\n          color: '#010101'\n        }}>\n  <ContactForm/>\n  <div className=\"list_section\">\n  <ContactList/>\n  </div>\n    </div>\n    )\n  }\n  ","\nimport App from '../components/App';\n\nexport default function Contacts () {\n  return (\n    <>\n      <App />\n    </>\n  );\n}","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["getContacts","state","contacts","items","getStatusFilter","filters","DynamicSort","property","a","b","toUpperCase","propTypes","useState","name","phone","initial_state","setInitial_state","useSelector","sort","dispatch","useDispatch","handleChangeForm","event","target","value","onSubmit","preventDefault","filter","key","length","alert","newContact","number","addContact","type","pattern","title","onChange","required","setFilter","handleFilterChange","placeholder","ContactListItem","id","onRemove","onClick","handleRemoveContact","deleteContact","useEffect","fetchContacts","visibleContacts","contact","toLowerCase","includes","map","App","refreshUser","style","display","minWidth","justifyContent","alignItems","fontSize","color","className","Contacts","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes"],"sourceRoot":""}